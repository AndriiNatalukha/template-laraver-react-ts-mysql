volumes:
  db-store:
  psysh-store:

configs:
  db-config:
    file: ./infra/docker/mysql/my.cnf

services:
  app:
    container_name: laravel
    build:
      context: ./src-backend
      dockerfile: ./../infra/docker/php/Dockerfile
      target: ${APP_BUILD_TARGET:-development}
    volumes:
      - type: bind
        source: ./src-backend
        target: /workspace
      - type: volume
        source: psysh-store
        target: /root/.config/psysh
        volume:
          nocopy: true
    environment:
      # Please remove this environment variable, after created the Laravel project. Please write in .env
      - DB_CONNECTION=${DB_CONNECTION:-mysql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-phper}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
  
  react:
    container_name: react
    build:
      context: ./src-frontend  # Путь к исходному коду React приложения
      dockerfile: ./../infra/docker/js/Dockerfile
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
    command: npm start  # Команда для запуска React приложения
    volumes:
      - type: bind
        source: ./src-frontend  # Путь к исходному коду React приложения
        target: /app
    depends_on:  # Укажем зависимости от других сервисов
      - web  # Если React взаимодействует с Nginx
      - app  # Если React взаимодействует с Laravel
  web:
    container_name: nginx
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
    ports:
      - target: 80
        published: ${WEB_PUBLISHED_PORT:-8080}
        protocol: tcp
        mode: host
    volumes:
      - type: bind
        source: ./src-backend
        target: /workspace

  db:
    container_name: mysql
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    ports:
      - target: 3306
        published: ${DB_PUBLISHED_PORT:-3306}
        protocol: tcp
        mode: host
    configs:
      - source: db-config
        target: /etc/my.cnf
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-laravel}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8081:8080

  mailpit:
    container_name: mailpit
    image: axllent/mailpit
    ports:
      - target: 8025
        published: ${MAILPIT_PUBLISHED_PORT:-8025}
        protocol: tcp
        mode: host
